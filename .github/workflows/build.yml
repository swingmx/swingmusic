name: Build and Upload
on:
  workflow_dispatch:
  release:
    types:
      - prereleased
      - released

env:
  PIP_USE_PEP517: true

jobs:
  build-client:
    runs-on: ubuntu-latest
    name: Build client
    steps:
      - name: Clone client
        uses: actions/checkout@v4
        with:
          repository: 'swingmx/webclient'
          path: swingmusic-client

      - name: Setup Node 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install yarn
        run: |
          npm install -g yarn

      - name: Install dependencies & Build client
        run: |
          cd swingmusic-client
          yarn install
          yarn build --outDir ../client
          cd ..

      - name: Upload client
        uses: actions/upload-artifact@v4
        with:
          path: "client/"
          compression-level: 0
          name: 'client'


  build-wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    steps:
      - name: Checkout swingmusic
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build wheels
        run: pip wheel . -w wheelhouse --no-deps

      - uses: actions/upload-artifact@v4
        with:
          # name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          compression-level: 0
          name: 'wheels'

  build-appimage:
    name: Build Appimage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout swingmusic
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install libev (Linux)
        run: sudo apt-get install libev-dev -y > /dev/null

      - name: Install appimage builder
        run: pip install python-appimage

      - name: Build appimage
        run: python-appimage build app -p 3.11 .

      - uses: actions/upload-artifact@v4
        with:
          path: ./*.AppImage
          compression-level: 0
          name: 'appimage'

  build-pyinstaller:
    name: Build binary on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [build-client, build-wheels]

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm, windows-latest, windows-11-arm, macos-13, macos-latest ]

    steps:
      - name: Checkout swingmusic
        uses: actions/checkout@v4

      - name: Install Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.x"

      - name: Download artifact
        uses: actions/download-artifact@v4

      # install system packages
      - name: Setup Homebrew
        if: ${{ startsWith(matrix.os, 'macos') }}
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install libev (macOS)
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          brew install libev

      - name: Install libev (Linux)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get install libev-dev -y > /dev/null

      - name: Install swingmusic
        run: | 
          pip install --find-links=wheels/ swingmusic[build]

      - name: Build with Pyinstaller on ${{ matrix.os }}
        run: pyinstaller swingmusic.spec

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pyinstaller-${{ matrix.os }}
          path: ./dist/swingmusic_*
          compression-level: 0

  upload-builds:
    name: Uploading builds to release
    runs-on: ubuntu-latest
    needs: [build-client, build-wheels, build-pyinstaller, build-appimage]

    steps:
      - name: Download client artifact
        uses: actions/download-artifact@v4
        with:
          name: client
          path: client

      - name: compress client
        run: |
          zip -r client.zip client
          rm -r client

      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: wheels

      - name: Download all Pyinstaller builds
        uses: actions/download-artifact@v4
        with:
          pattern: Pyinstaller-*
          path: pyinstaller
          merge-multiple: true

      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            client.zip
            wheels/**
            pyinstaller/**
